# -*- coding: utf-8 -*-
"""CoinToss_BasicInput.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W13FIeqCvAkPXqVHqycruZNbSX3b8Wuo
"""

import streamlit as st
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

def coin_toss_experiment(N, T):
#    np.random.seed(127)

    factor = np.random.choice([0.6,1.5], size=(T, N))
    x=np.ones([T+1,N])
    x_N=np.ones([T+1,N])

    for step in range(T):
        x[step+1,:]=x[step,:]*factor[step]

        x_N[step+1,:]=x_N[step,:]*factor[step]
        x_N[step+1,:]=np.mean(x_N[step+1,:])
    
     # Create a DataFrame to store the results
    data = {
        't': np.arange(0, T+1),
        'x': x_N[:,0]
    }
    df = pd.DataFrame(data)

    return df

def main():
    # User inputs
    N = st.slider('Number of cooperators, N:', min_value=1, max_value=10)
    T = st.slider('Simulated rounds, T:', value=500,min_value=1,max_value=2000)

    if st.button('Simulate'):
        results_df = coin_toss_experiment(N,T)

        # Display results
        gt=.5*(np.log(1.5)+np.log(.6))
        ge=np.log(1.05)
        fig, ax = plt.subplots()
        ax.xaxis.tick_top()
        ax.xaxis.set_label_position('top')

# Hide the bottom spine and ticks
        ax.spines['bottom'].set_visible(False)
        ax.spines['right'].set_visible(False)
        ax.tick_params(axis='x', which='both', bottom=False, top=False)
        plt.semilogy(results_df['t'], results_df['x'],color='blue')
        plt.semilogy(results_df['t'], np.exp(results_df['t']*ge),color='red')        
        plt.semilogy(results_df['t'], np.exp(results_df['t']*gt),color='green')        
        plt.xlabel('time step (round)')
        plt.ylabel('wealth')
        st.pyplot(plt)
        
if __name__ == '__main__':
    main()

